name: Tests, Deploy And Publish
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
      - 'v**'
  pull_request:
    branches: [ main ]
jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./template
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm i
      - name: Run ðŸ–‹ Code Style Check
        run: npm run style
      - name: Run ðŸ§ª Unit tests
        run: npm run test:unit
      - name: Cypress run
        uses: cypress-io/github-action@v5.0.0
        with:
          start: npm start
          working-directory: template
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-test
          path: cypress/
          retention-days: 5
  page_deploy:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./template
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies & React Snap
        run: npm i -D react-snap
      - name: ðŸš§ Build App
        run: npm run build
      - name: Run ðŸ“¸ React snap
        run: npx react-snap
      - name: Deploy ðŸš€ Page
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - name: NPM ðŸ“¢ Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_SECRET}}